#include <kipr/botball.h>
void drive_forward (int ticks);
void drive_backward (int ticks);
void turn_right (int ticks, int power);		
void turn_left (int ticks, int power);		
void close_claw ();
void open_claw ();
int main()
{
    printf("Starting Checkpoint\n");
shut_down_in(119);
    enable_servos();
    cmpc(1);
    open_claw();//open claws
    drive_forward(4000); //go to transport
    printf("At the transport\n");
    close_claw(); //grab transport
    msleep(100);
    drive_backward(-4000); //drive backward with transport 
    printf("Driving back\n");
    turn_right(225,-100); //turn toward 
    printf("Turning\n");
    drive_forward(4000); // go toward wall to start going to the wall
    turn_left(1000,-25);
    drive_forward(2000);
    turn_left(3000,-25);
    drive_forward(600);
    drive_backward(500);
    drive_forward(600);
    drive_backward(500);
    drive_forward(10000);
    disable_servos();
    ao();
    return 0;
}
void drive_forward (int ticks) { 
    cmpc(1);
    cmpc(2);

    while (gmpc(1) < ticks) {
        motor(1,100);
        motor(2,100);
        printf("drive_forward\n");
    }
}

void drive_backward(int ticks) {
    cmpc(1);
    cmpc(2);

    while (gmpc(1) > ticks) {
        motor(1,-100);
        motor(2,-100);

       printf("drive_backwards\n");
    }
}

void turn_right (int ticks, int power) {
    cmpc(1);
    cmpc(2);
    while (gmpc(1) < ticks) {
        motor(1,100);
        motor(2,power);
    }
    printf("turn_right\n");
}
void turn_left (int ticks, int power) {
    cmpc(1);
    cmpc(2);
    while (gmpc(2) < ticks) {
        motor(1,power);
        motor(2,100);
    }
}
void close_claw () {
    set_servo_position(1,750);
    set_servo_position(2,1200);
    printf("close/n");
}	
void open_claw () {
    set_servo_position(1,125);
    set_servo_position(2,1900);
    printf("open/n");
}
